fn print(var fmt: *char): void;
fn printInt(var num: u64): void;
fn printChar(var chr: char): void;
fn allocMem(var size: u64): *u64;
fn freeMem(var ptr: *u64): void;
fn getRand(var max: u64): u64;
fn printFmt(var fmt: *char, ...): u64;
fn getInput(var buf: *char, var size: int): *char;
fn printBin(var num: u64, var bits: int): void;

fn bf(var string: *char): void {
  var loop: u64 = 0;
  var brackets: *u64 = allocMem(8 * 100);
  var cells: *u8 = allocMem(1 * 512);
  var cell_idx: u16 = 0;
  var i: int = 0;
  while (string[i] != 0) {
    if (string[i] == 43) {
      cells[cell_idx] += 1;
      i += 1;
    } else if (string[i] == 45) {
      cells[cell_idx] -= 1;
      i += 1;
    } else if (string[i] == 62) {
      cell_idx += 1;
      if (cell_idx > 511) {
        cell_idx = 0;
      }
      i += 1;
    } else if (string[i] == 60) {
      if (cell_idx == 0) {
        cell_idx = 511;
      } else {
        cell_idx -= 1;
      }
      i += 1;
    } else if (string[i] == 91) {
      brackets[loop] = i + 1;
      loop += 1;
      i += 1;
    } else if (string[i] == 93) {
      if (cells[cell_idx] == 0) {
        loop -= 1;
        i += 1;
      } else {
        i = brackets[loop - 1];
      }
    } else if (string[i] == 46) {
      printChar(cells[cell_idx]);
      i += 1;
    }
  }
  freeMem(cells);
  freeMem(brackets);
}

fn main(): int {
  bf(">+++++++++[<++++++++>-]<.>+++++++[<++++>-]<+.+++++++..+++.>>>++++++++[<++++>-]<.>>>++++++++++[<+++++++++>-]<---.<<<<.+++.------.--------.>>+.>++++++++++.");
  ret 0;
}