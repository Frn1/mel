fn print(var fmt: *char): void;
fn printInt(var num: u64): void;
fn printChar(var num: *char): void;
fn allocMem(var size: u64): *u64;
fn freeMem(var ptr: *u64): void;
fn getRand(var max: u64): u64;
fn printFmt(var fmt: *char, ...): u64;
fn getInput(var buf: *char, var size: int): *char;
fn printBin(var num: u64, var bits: int): void;

struct string {
  var data: *char;
  var size: u64;
}

fn strLen(var data: *char): int {
  var idx: int = 0;
  while (data[idx] != 0) {
    idx += 1;
  }
  ret idx;
}

fn strCpy(var dest: *char, var src: *char): void {
  var idx: int = 0;
  while (src[idx] != 0) {
    dest[idx] = src[idx];
    idx += 1;
  }
}

fn newString(var data: *char): *string {
  var str: *string = allocMem(16);
  var size: int = strLen(data);
  str.data = allocMem(size);
  strCpy(str.data, data);
  str.size = size;
  ret str;
}

fn printString(var str: *string): void {
  for (var i: int = 0; i < str.size; i += 1) {
    printFmt("%c", str.data[i]);
  }
  printFmt("\n");
}

fn main(): int {
  var str: *string = newString("Mel compiler has features....");
  printString(str);
  ret 0;
}